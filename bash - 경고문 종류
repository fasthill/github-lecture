
[Git] warning: LF will be replaced by CRLF in README.md.

원인
운영체제에 따라서 다른 개행문자를 사용하고 나중에 이것으로 추후 문제가 생길 수 있기 때문입니다.
 
운영체제 별 사용하는 개행문자
유닉스 / 리눅스 : "LF"로 개행문자를 사용
윈도우 : "CRLF"형식으로 개행문자를 사용

출처: https://somjang.tistory.com/entry/GIT-warning-LF-will-be-replaced-by-CRLF-in-READMEmd [솜씨좋은장씨]

맥/리눅스 이용 개발자와 윈도우 개발자가 협업할 때

왜 발생할까?

터미널에 git 명령어를 입력했는데 다음과 같은 에러가 뜨는 경우가 있다:

warning: CRLF will be replaced by LF in some/file.file.
The file will have its original line endings in your working directory.
이는 맥 또는 리눅스를 쓰는 개발자와 윈도우 쓰는 개발자가 Git으로 협업할 때 발생하는 Whitespace 에러다. 
유닉스 시스템에서는 한 줄의 끝이 LF(Line Feed)로 이루어지는 반면, 
윈도우에서는 줄 하나가 CR(Carriage Return)와 LF(Line Feed), 
즉 CRLF로 이루어지기 때문이다. 따라서 어느 한 쪽을 선택할지 Git에게 혼란이 온 것이다.

유닉스 OS을 쓰고 있다면 CRLF will be replaced by LF in… 에러 메시지가 뜰 것이고, 
윈도우를 사용하고 있다면 LF will be replaced by CRLF in… 에러 메시지가 뜰 것이다.

둘 중 뭐든간에 해결 방법은 같다. Git은 똑똑해서 이를 자동 변환해주는 
core.autocrlf 라는 기능을 가지고 있는데, 이 기능을 켜주기만 하면 된다.

해답은 core.autocrlf 를 켜는 것!

이 기능은 개발자가 git에 코드를 추가했을 때 (예컨대 커밋할 때)에는 CRLF를 LF로 변환해주고, 
git의 코드를 개발자가 조회할 때 (예컨대 clone한다거나 할 때)에는 LF를 CRLF로 변환해준다.

그러므로 윈도우 사용자의 경우 이러한 변환이 항상 실행되도록 다음과 같은 명령어를 입력한다. 
물론 시스템 전체가 아닌 해당 프로젝트에만 적용하고 싶다면 —global 을 빼주면 된다.

git config --global core.autocrlf true
리눅스나 맥을 사용하고 있는 경우, 조회할 때 LF를 CRLF를 변환하는 것은 원하지 않을 것이다. 
따라서 뒤에 input이라는 명령어를 추가해줌으로써 단방향으로만 변환이 이루어지도록 설정한다.

git config --global core.autocrlf true input
혹은 이러한 변환 기능을 원하지 않고, 그냥 에러 메시지 끄고 알아서 작업하고 싶은 경우에는 
아래 명령어로 경고메시지 기능인 core.safecrlf를 꺼주면 된다.

git config --global core.safecrlf false
출처 : https://blog.jaeyoon.io/2018/01/git-crlf.html

Line Feed (LF)
아스키 코드: 16진수로 0A
기능: 커서를 현재 행의 다음 행으로, 즉 아래로 내리기

Carriage Return (CR)
아스키 코드: 16진수로 0D
기능: 커서를 현재 행의 맨 좌측으로 옮기기

프린터나 타자기에서 사용되던 개념인데, 컴퓨터의 텍스트 파일에서도 사용되고 있습니다.
'커서를 아래로 내리는 동작'과 '커서의 행의 맨 앞으로 보내는 동작'을 합치면, 다음 줄로 행갈이가 됩니다.
메모장 등에서, 엔터키를 치면 다음 줄로 내려갑니다. 이때 각 줄의 끝에 바로 이 행갈이 문자가 자동으로 붙습니다.


$ git stash
Saved working directory and index state WIP on exp: 58f20df 1  ← WIP : Working in Process

$ git branch exp ;;; init후 발생
fatal: Not a valid object name: 'master'.
← branch 목록에 master도 나오지 않고 fatal: Not a valid object name: 'master'. 이라는 에러 메세지가 발생하면서 다른 branch 생성도 되지 않는다.
이 이유는 master branch에서 최초의 commit을 하지 않았기 때문이다. 다른 분기를 만들기 위해서는 master에서 commit을 최소 1번은 해야한다.
$ git checkout -b exp 일 경우 exp로 checkout이 되나 그 다음부터는 이동이 불가하게 됨(아래). 위와 같은 현상이발생. 따라서 최소 1개 commit을 하고 진행해야 함.
   $ git checkout master
   error: pathspec 'master' did not match any file(s) known to git

  다 지우고 git init을 실행해야 함. (최초에 나오는 에러이니 작업한 내용은 없을 것임)
  
$ git remote add origin https://github.com/fasthill/gitflow.git 실행시
error: remote origin already exists. 발생

주소를 SSH로 받아서 에러가 발생. HTTPS로 받아서 재수행 하면
$ git remote add origin https://github.com/fasthill/gitflow.git 이렇게 수행하면
error: remote origin already exists. 발생

위의 오류를 해결하는 방법은 간단하다.
git remote remove origin을 입력해주고 다시 주소를 add해주면 된다.
$ git remote add origin https://github.com/fasthill/gitflow.git <- 다시 수행

-------
Auto-merging file1.txt
CONFLICT (content): Merge conflict in file1.txt
Automatic merge failed; fix conflicts and then commit the result.  
   -> file.txt 수정후
   git commit -am 'message' 진행

