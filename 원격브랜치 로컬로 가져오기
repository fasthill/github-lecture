원격 저장소의 특정 Branch를 로컬 저장소의 새로운 Branch로 가져오기
이는 GIT을 활용한 협업 프로젝트에서 심심치 않게 자주 하게 되는 작업입니다.

예를 들어, 원격 저장소에 Push를 시도했는데 Reject당한 경우 원격 저장소의 대상 Branch를 로컬 저장소의 임시 Branch로 가져온 뒤, 
병합이나 재정렬을 하고 다시 Push를 하는 순서로 작업을 진행합니다.

다음 세 명령어는 함께 묶어서 자주 사용되므로 눈여겨 봐 두면 언젠가 유용하게 활용할 수 있을 것입니다.

git checkout -b {새로운 로컬 Branch 이름} {원격 저장소 별칭}/{원격 Branch 이름}
git checkout {새로운 로컬 Branch 이름}
git pull origin {원격 Branch 이름}
이 명령어 세트의 사용 예시와 무엇을 하는지에 대한 설명은 다음과 같습니다.

git checkout -b temp origin/master
git checkout temp
git pull origin master
첫 번째 줄에서는 origin 저장소의 master Branch를 로컬 저장소로 가져오되, temp라는 이름의 새로운 Branch를 생성하여 가져옵니다. 
다음 줄에서는 로컬 저장소의 temp Branch로 이동하고, 마지막 줄에서는 원격 저장소의 최신 변경사항을 가져와 현재 Branch인 temp에 반영합니다.

마지막 줄에서 Pull을 하는 이유는 checkout -b 명령을 수행할 때 대상 Branch를 과거에 이미 가져온 기록이 있을 경우 원격 저장소에서 
가져오는 것이 아닌, Cache된 정보를 가져오기 때문입니다.

출처 https://www.tuwlab.com/ece/22216

git checkout -b [branch] [remotename]/[branch]
// 트래킹 브랜치를 만드는 명령어다. remotename/ branch 의 리모트 트래킹 브랜치를 
// 트랙킹 하는 브랜치를 만든다.
$ git checkout --track origin/serverfix
Branch serverfix set up to track remote branch serverfix from origin.
Switched to a new branch 'serverfix'
// 트래킹 브랜치를 만드는 명령어,이름을 자동으로 생성해주는 명령어다.
$ git branch -u origin/serverfix
Branch serverfix set up to track remote branch serverfix from origin.
// 로컬에 붙어있는 브랜치를 remote/branch 에 바인딩한다.

git checkout -b br1 origin/br1 = git checkout -t origin/br1

git branch -u origin/br1 은 현재 checkout된 브랜치가 br1이어야 함. br1브랜치가 기존에 존재해야 함.
= 
