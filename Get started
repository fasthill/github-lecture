Git 동작순서
- Git 사용 목적 : 내 PC 에서 작업한 내용 (Local에서 작업한 내용이라고 표현)을 프로젝트 참여자들과 공동으로 작업하기 위하여
  프로젝트 참여자 누구나 접근할 수 있는 공간(Remote 서버로 호칭)에 보내어 프로젝트참여자 상호간에 작업한 내용을 주고 받으면서
  프로젝트가 마무리 될때까지 관리하는 과정을 가능하게 만드는 일련의 동작 순서
  ① 내 PC 폴더(Local)에서 소스코드 작성 → 원격 서버(Remote origin라고 부름)에 올림 → 공동참여자가 검토후 나에게 수정 요청
    (이유는 여러가지가 있을 수 있음. 다른참여자가 작성한 소스와 연결에 문제가 있는 경우, 파일내 작성 convention이 맞지 않는 경우, 
     소스자체에 문제가 있는 경우 등이 있음) → Remote 서버에서 연관된 파일 download(내 소스와 같이 검토하기 위하여) 
     → 내 PC에서 최초로 올렸던 소스를 수정 요청 내용에 맞도록 수정 → 수정후 다시 원결 서버에 upload 
     → 공동참여자가 검토후 이상이 없으면 접수후 완료
 
 기본적인 용어
 Remote/Origin : 위에서 설명한 원격(remote) 서버(서버이름 Origin). 마치 구글 Drive나 Naver Ndrive에 올린다는 개념으로 이해하면 됨.
 Push : remote 서버에 upload할 때 사용하는 명령어
 Pull, Fetch : remote 서버에서 파일을 download할 때 사용하는 명령어
 Repository (Repo, 저장소) : 내 소스파일이 저장되는 공간
   - Remote에 있는 Repository가 있고, 내 PC 폴더는 local repository로 부름
   - 일반적으로 1개의 Repository는 1개의 프로젝트 단위로 만들게 됨.(반드시 그렇지 만은 아님)
   https://evan-moon.github.io/2019/07/25/git-tutorial/ 참조하여 작성
 
  
1. git 프로그램 install
2. github 계정만들기
3. C: 에서 git 프로젝트에 사용할 폴더 만들기 (소스 등 파일이 상주하는 곳 예: gitexample)
4. gitexample 폴더에서 Git Bash command 창 실행 (오른쪽 mouse 버튼 클릭하면 명령줄 나타남)
5. Bash command 창에서 'git init' 실행 -> gitexample 폴더애 .git 폴더가 생성됨
6. gitexample 폴더에서 예제파일을 만듦 (예로 example.txt 생성)
7. 
  프로젝트를 완료할 때까지 수정-upload-검토-download-수정-upload-검토-download-수정 하는 단계를 반복
  
